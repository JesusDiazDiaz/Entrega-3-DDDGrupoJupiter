  version: '3'
  volumes:
    exp_postgres_data: {}
    datalake_postgres_data: {}

  networks:
    app_net:
      driver: bridge
    pulsar:
      driver: bridge
  services:
    pulsar:
      image: apachepulsar/pulsar:3.2.0
      container_name: pulsar
      restart: on-failure
      networks:
        - pulsar
      ports:
        - "6650:6650"
        - "8080:8080"
      command: [ "bin/pulsar", "standalone" ]

    auditoria:
      build:
        context: .
        dockerfile: audit.Dockerfile
      container_name: auditoria
      hostname: auditoria
      networks:
        - app_net
        - pulsar
      environment:
        DB_NAME: app_db
        DB_HOST: postgres
        DB_PORT: 5432
        DB_USER: postgres
        DB_PASSWORD: postgres
        BROKER_HOST: pulsar
      ports:
        - "5004:5000"
      depends_on:
        pulsar:
          condition: service_started
        postgres:
          condition: service_healthy

    companies:
      build:
        context: .
        dockerfile: companies.Dockerfile
      container_name: companies
      hostname: companies
      networks:
        - app_net
        - pulsar
      environment:
        DB_NAME: app_dbd
        DB_HOST: postgres
        DB_PORT: 5432
        DB_USER: postgres
        DB_PASSWORD: postgres
        BROKER_HOST: pulsar
      ports:
        - "5005:5000"
      depends_on:
        pulsar:
          condition: service_started
        postgres:
          condition: service_healthy
        auditoria:
          condition: service_started

    datalake:
      image: postgres
      networks:
        - app_net
      ports:
        - "5436:5432"
      environment:
        POSTGRES_DB: datalake
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
      volumes:
        - datalake_postgres_data:/var/lib/postgresql/data
      healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U postgres" ]
        interval: 2s
        timeout: 5s
        retries: 5

    properties:
      build:
        context: .
        dockerfile: properties.Dockerfile
      container_name: properties
      hostname: properties
      networks:
        - app_net
        - pulsar
      environment:
        DB_NAME: datalake
        DB_HOST: datalake
        DB_PORT: 5432
        DB_USER: postgres
        DB_PASSWORD: postgres
        BROKER_HOST: pulsar
      ports:
        - "5006:5000"
      depends_on:
        pulsar:
          condition: service_started
        datalake:
          condition: service_healthy
        auditoria:
          condition: service_started

    postgres:
      image: postgres
      networks:
        - app_net
      ports:
        - "5435:5432"
      environment:
        POSTGRES_DB: app_db
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
      volumes:
        - exp_postgres_data:/var/lib/postgresql/data
      healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U postgres" ]
        interval: 2s
        timeout: 5s
        retries: 5

    pipeline:
      build:
        context: .
        dockerfile: pipeline.Dockerfile
      container_name: pipeline
      hostname: pipeline
      networks:
        - app_net
        - pulsar
      environment:
        DB_NAME: datalake
        DB_HOST: datalake
        DB_NAME_RAICES: app_db
        DB_HOST_RAICES: postgres
        DB_PORT: 5432
        DB_USER: postgres
        DB_PASSWORD: postgres
        BROKER_HOST: pulsar
      ports:
        - "5007:5000"
      depends_on:
        pulsar:
          condition: service_started
        datalake:
          condition: service_healthy
        auditoria:
          condition: service_started
        postgres:
          condition: service_healthy